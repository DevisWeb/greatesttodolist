# IMPORTANT: gitignore should always be set BEFORE you add files to the project that should be ignored
# Recommendation for future projects: 
# 1. add a .gitignore_global in your users root for your private operating system and your editor (more infos below) 
#    to ignore these files across all repos on your system (so you don' t have to care about them over and over agan for every new project)
# 2. add a .gitignore local file to your project-repo for ignoring project specific language/framework files, packages and credentials
# Note: local files can also be excluded (without using a .gitignore file) by creating .git/info/exclude, this excludes files only on your system

### Resources with infos ABOUT and WHY .gitignore:
# https://docs.github.com/en/free-pro-team@latest/github/using-git/ignoring-files (also without .gitignore)
# https://www.atlassian.com/git/tutorials/saving-changes/gitignore
# https://zellwk.com/blog/gitignore/
# https://medium.com/self-modifying-code/create-a-global-gitignore-step-by-step-for-macos-and-windows-31a765291409
# https://docs.microsoft.com/en-us/azure/devops/repos/git/ignore-files?view=azure-devops&tabs=visual-studio

### Resources for generating a .gitignore
# Collection of gitignore templates: https://github.com/github/gitignore
# or go to https://www.toptal.com/developers/gitignore
# to generate .gitignore file based on your OS, IDE, language, etc. 
# by listing them in the input field and click generate


##########################################################################
# Now let' s ignore stuff:
##########################################################################
# By listing them we ignore the following folders including its content: 
# - the ignore folder can contain now files that you don't yet want to use/add to your repo
# - admin/ folder for example could now contain your credentials and more sensible data 
#   that you never want to be pushed to a remote repo (that' s why we ignore it)
ignore/
admin/

# Example for ignoring files with special file endings such as all xml files 
*.xml
# exclamation mark is used for exceptions (means don' t ignore): 
!test.xml


##########################################################################
### Ignore lists for language and framework files:

### Ignore  ##############################################################
### Node ###
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env*.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

### Ignore  ##############################################################
### react ###
.DS_*
*.log
logs
**/*.backup.*
**/*.back.*

node_modules
bower_components

*.sublime*

psd
thumb
sketch

### Ignore  ##############################################################
### Sass ###
.sass-cache/
*.css.map
*.sass.map
*.scss.map


#########################################################################
# G L O B A L
#########################################################################
### ignore-lists below for editors (like Sublime and VS CODE) 
# and for your operating system (Windows, Linux, MacOS)
# should  normally be added to a '.gitignore_global' file in your users root ~

# for future projects you would do the following steps:
# $ cd c:Users/username or cd ~
# $ touch ~/.gitignore_global
# $ open ~/.gitignore_global 
# then add the rules from below 
# but only for the editor & operating system YOU are using
# then go to git bash: 
# $ git config --global core.excludesfile ~/.gitignore_global
# verify if config file is correct:
# $ git config --global core.excludesfile
# --> output should be equal to the path of your new file, 
# such as: /Users/yourusername/.gitignore_global

### Ignore ###############################################################
### VisualStudioCode ###
.vscode/*
!.vscode/tasks.json
!.vscode/launch.json
*.code-workspace

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

### Ignore ###############################################################
### SublimeText ###
# Cache files for Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# Workspace files are user-specific
*.sublime-workspace

# Project files should be checked into the repository, unless a significant
# proportion of contributors will probably not be using Sublime Text
# *.sublime-project

# SFTP configuration file
sftp-config.json

# Package control specific files
Package Control.last-run
Package Control.ca-list
Package Control.ca-bundle
Package Control.system-ca-bundle
Package Control.cache/
Package Control.ca-certs/
Package Control.merged-ca-bundle
Package Control.user-ca-bundle
oscrypto-ca-bundle.crt
bh_unicode_properties.cache

# Sublime-github package stores a github token in this file
# https://packagecontrol.io/packages/sublime-github
GitHub.sublime-settings

### Ignore ###############################################################
### Windows ###
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

### Ignore ###############################################################

### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

### Ignore ###############################################################
### Linux ###
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

### End of gitignore